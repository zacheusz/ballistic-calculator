name: Deploy to AWS

on:
  push:
    branches:
      - development  # Change this to match your main branch name if different
  workflow_dispatch:  # Allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Set up Python for AWS SAM
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install AWS SAM CLI
        run: |
          pip install aws-sam-cli
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION || 'eu-central-1' }}
          
      - name: Deploy with SAM
        run: |
          sam deploy \
            --template-file deployment/template.yaml \
            --stack-name snipe-ballistics-web-ui \
            --parameter-overrides StageName=${{ vars.STAGE_NAME || 'prod' }} DeployCloudFront=${{ vars.DEPLOY_CLOUDFRONT || 'false' }} \
            --capabilities CAPABILITY_IAM \
            --no-fail-on-empty-changeset
            
      - name: Get deployment outputs
        id: get-outputs
        run: |
          S3_BUCKET=$(aws cloudformation describe-stacks \
            --stack-name snipe-ballistics-web-ui \
            --query "Stacks[0].Outputs[?OutputKey=='WebsiteBucketName'].OutputValue" \
            --output text)
          CLOUDFRONT_DIST_ID=$(aws cloudformation describe-stacks \
            --stack-name snipe-ballistics-web-ui \
            --query "Stacks[0].Outputs[?OutputKey=='CloudFrontDistributionId'].OutputValue" \
            --output text)
          WEBSITE_URL=$(aws cloudformation describe-stacks \
            --stack-name snipe-ballistics-web-ui \
            --query "Stacks[0].Outputs[?OutputKey=='WebsiteURL'].OutputValue" \
            --output text)
          echo "s3_bucket=${S3_BUCKET}" >> $GITHUB_OUTPUT
          echo "cloudfront_id=${CLOUDFRONT_DIST_ID}" >> $GITHUB_OUTPUT
          echo "website_url=${WEBSITE_URL}" >> $GITHUB_OUTPUT
          
      - name: Upload to S3
        run: |
          aws s3 sync dist s3://${{ steps.get-outputs.outputs.s3_bucket }} --delete
          
      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ steps.get-outputs.outputs.cloudfront_id }} \
            --paths "/*"
            
      - name: Deployment summary
        run: |
          echo "Deployment completed successfully!"
          echo "Website URL: ${{ steps.get-outputs.outputs.website_url }}"
